package com.galexis.configdb;
// Generated Sep 6, 2013 10:20:44 AM by Hibernate Tools 3.6.0


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ConditionSchema2dataStoreFieldRelation generated by hbm2java
 */
@Entity
@Table(name="ConditionSchema2DataStoreFieldRelation"
    ,catalog="integrationConfigDB"
)
public class ConditionSchema2dataStoreFieldRelation  implements java.io.Serializable {


     private Integer pk;
     private DataStoreField dataStoreField;
     private ConditionSchema conditionSchema;
     private boolean valueNullable;
     private Set<ConditionDefinitionDetails> conditionDefinitionDetailses = new HashSet<ConditionDefinitionDetails>(0);

    public ConditionSchema2dataStoreFieldRelation() {
    }

	
    public ConditionSchema2dataStoreFieldRelation(DataStoreField dataStoreField, ConditionSchema conditionSchema, boolean valueNullable) {
        this.dataStoreField = dataStoreField;
        this.conditionSchema = conditionSchema;
        this.valueNullable = valueNullable;
    }
    public ConditionSchema2dataStoreFieldRelation(DataStoreField dataStoreField, ConditionSchema conditionSchema, boolean valueNullable, Set<ConditionDefinitionDetails> conditionDefinitionDetailses) {
       this.dataStoreField = dataStoreField;
       this.conditionSchema = conditionSchema;
       this.valueNullable = valueNullable;
       this.conditionDefinitionDetailses = conditionDefinitionDetailses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="PK", unique=true, nullable=false)
    public Integer getPk() {
        return this.pk;
    }
    
    public void setPk(Integer pk) {
        this.pk = pk;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="DataStoreFieldPK", nullable=false)
    public DataStoreField getDataStoreField() {
        return this.dataStoreField;
    }
    
    public void setDataStoreField(DataStoreField dataStoreField) {
        this.dataStoreField = dataStoreField;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ConditionSchemaPK", nullable=false)
    public ConditionSchema getConditionSchema() {
        return this.conditionSchema;
    }
    
    public void setConditionSchema(ConditionSchema conditionSchema) {
        this.conditionSchema = conditionSchema;
    }

    
    @Column(name="ValueNullable", nullable=false)
    public boolean isValueNullable() {
        return this.valueNullable;
    }
    
    public void setValueNullable(boolean valueNullable) {
        this.valueNullable = valueNullable;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="conditionSchema2dataStoreFieldRelation")
    public Set<ConditionDefinitionDetails> getConditionDefinitionDetailses() {
        return this.conditionDefinitionDetailses;
    }
    
    public void setConditionDefinitionDetailses(Set<ConditionDefinitionDetails> conditionDefinitionDetailses) {
        this.conditionDefinitionDetailses = conditionDefinitionDetailses;
    }




}


