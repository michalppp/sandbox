package com.galexis.configdb;
// Generated Sep 6, 2013 10:20:44 AM by Hibernate Tools 3.6.0


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * ValueConversion generated by hbm2java
 */
@Entity
@Table(name="ValueConversion"
    ,catalog="integrationConfigDB"
    , uniqueConstraints = @UniqueConstraint(columnNames={"ConversionGroup", "PartnerGroupPK"}) 
)
public class ValueConversion  implements java.io.Serializable {


     private int pk;
     private BackendResource backendResource;
     private PartnerGroup partnerGroup;
     private ConditionSchema conditionSchema;
     private Metadata metadata;
     private String partner;
     private String conversionGroup;
     private String conversionStrategy;
     private String conversionArguments;
     private String comment;
     private Set<FieldAccessorDataStoreField> fieldAccessorDataStoreFields = new HashSet<FieldAccessorDataStoreField>(0);

    public ValueConversion() {
    }

	
    public ValueConversion(int pk, PartnerGroup partnerGroup, Metadata metadata, String conversionGroup, String conversionStrategy) {
        this.pk = pk;
        this.partnerGroup = partnerGroup;
        this.metadata = metadata;
        this.conversionGroup = conversionGroup;
        this.conversionStrategy = conversionStrategy;
    }
    public ValueConversion(int pk, BackendResource backendResource, PartnerGroup partnerGroup, ConditionSchema conditionSchema, Metadata metadata, String partner, String conversionGroup, String conversionStrategy, String conversionArguments, String comment, Set<FieldAccessorDataStoreField> fieldAccessorDataStoreFields) {
       this.pk = pk;
       this.backendResource = backendResource;
       this.partnerGroup = partnerGroup;
       this.conditionSchema = conditionSchema;
       this.metadata = metadata;
       this.partner = partner;
       this.conversionGroup = conversionGroup;
       this.conversionStrategy = conversionStrategy;
       this.conversionArguments = conversionArguments;
       this.comment = comment;
       this.fieldAccessorDataStoreFields = fieldAccessorDataStoreFields;
    }
   
     @Id 

    
    @Column(name="PK", unique=true, nullable=false)
    public int getPk() {
        return this.pk;
    }
    
    public void setPk(int pk) {
        this.pk = pk;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="BackendResourcePK")
    public BackendResource getBackendResource() {
        return this.backendResource;
    }
    
    public void setBackendResource(BackendResource backendResource) {
        this.backendResource = backendResource;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PartnerGroupPK", nullable=false)
    public PartnerGroup getPartnerGroup() {
        return this.partnerGroup;
    }
    
    public void setPartnerGroup(PartnerGroup partnerGroup) {
        this.partnerGroup = partnerGroup;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ConditionSchemaPK")
    public ConditionSchema getConditionSchema() {
        return this.conditionSchema;
    }
    
    public void setConditionSchema(ConditionSchema conditionSchema) {
        this.conditionSchema = conditionSchema;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MetadataPK", nullable=false)
    public Metadata getMetadata() {
        return this.metadata;
    }
    
    public void setMetadata(Metadata metadata) {
        this.metadata = metadata;
    }

    
    @Column(name="Partner", length=20)
    public String getPartner() {
        return this.partner;
    }
    
    public void setPartner(String partner) {
        this.partner = partner;
    }

    
    @Column(name="ConversionGroup", nullable=false, length=128)
    public String getConversionGroup() {
        return this.conversionGroup;
    }
    
    public void setConversionGroup(String conversionGroup) {
        this.conversionGroup = conversionGroup;
    }

    
    @Column(name="ConversionStrategy", nullable=false, length=128)
    public String getConversionStrategy() {
        return this.conversionStrategy;
    }
    
    public void setConversionStrategy(String conversionStrategy) {
        this.conversionStrategy = conversionStrategy;
    }

    
    @Column(name="ConversionArguments", length=1024)
    public String getConversionArguments() {
        return this.conversionArguments;
    }
    
    public void setConversionArguments(String conversionArguments) {
        this.conversionArguments = conversionArguments;
    }

    
    @Column(name="Comment", length=1024)
    public String getComment() {
        return this.comment;
    }
    
    public void setComment(String comment) {
        this.comment = comment;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="valueConversion")
    public Set<FieldAccessorDataStoreField> getFieldAccessorDataStoreFields() {
        return this.fieldAccessorDataStoreFields;
    }
    
    public void setFieldAccessorDataStoreFields(Set<FieldAccessorDataStoreField> fieldAccessorDataStoreFields) {
        this.fieldAccessorDataStoreFields = fieldAccessorDataStoreFields;
    }




}


