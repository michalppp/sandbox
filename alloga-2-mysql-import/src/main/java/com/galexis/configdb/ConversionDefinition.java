package com.galexis.configdb;
// Generated Sep 6, 2013 10:20:44 AM by Hibernate Tools 3.6.0


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * ConversionDefinition generated by hbm2java
 */
@Entity
@Table(name="ConversionDefinition"
    ,catalog="integrationConfigDB"
    , uniqueConstraints = @UniqueConstraint(columnNames={"SourceValue", "ConversionGroup", "PartnerGroupPK"}) 
)
public class ConversionDefinition  implements java.io.Serializable {


     private int pk;
     private BackendResource backendResource;
     private PartnerGroup partnerGroup;
     private Metadata metadata;
     private String partner;
     private String conversionGroup;
     private String sourceValue;
     private String translatedValue;
     private int translatedType;
     private Set<ConditionDefinition> conditionDefinitions = new HashSet<ConditionDefinition>(0);

    public ConversionDefinition() {
    }

	
    public ConversionDefinition(int pk, PartnerGroup partnerGroup, Metadata metadata, String conversionGroup, String sourceValue, String translatedValue, int translatedType) {
        this.pk = pk;
        this.partnerGroup = partnerGroup;
        this.metadata = metadata;
        this.conversionGroup = conversionGroup;
        this.sourceValue = sourceValue;
        this.translatedValue = translatedValue;
        this.translatedType = translatedType;
    }
    public ConversionDefinition(int pk, BackendResource backendResource, PartnerGroup partnerGroup, Metadata metadata, String partner, String conversionGroup, String sourceValue, String translatedValue, int translatedType, Set<ConditionDefinition> conditionDefinitions) {
       this.pk = pk;
       this.backendResource = backendResource;
       this.partnerGroup = partnerGroup;
       this.metadata = metadata;
       this.partner = partner;
       this.conversionGroup = conversionGroup;
       this.sourceValue = sourceValue;
       this.translatedValue = translatedValue;
       this.translatedType = translatedType;
       this.conditionDefinitions = conditionDefinitions;
    }
   
     @Id 

    
    @Column(name="PK", unique=true, nullable=false)
    public int getPk() {
        return this.pk;
    }
    
    public void setPk(int pk) {
        this.pk = pk;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="BackendResourcePK")
    public BackendResource getBackendResource() {
        return this.backendResource;
    }
    
    public void setBackendResource(BackendResource backendResource) {
        this.backendResource = backendResource;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PartnerGroupPK", nullable=false)
    public PartnerGroup getPartnerGroup() {
        return this.partnerGroup;
    }
    
    public void setPartnerGroup(PartnerGroup partnerGroup) {
        this.partnerGroup = partnerGroup;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MetadataPK", nullable=false)
    public Metadata getMetadata() {
        return this.metadata;
    }
    
    public void setMetadata(Metadata metadata) {
        this.metadata = metadata;
    }

    
    @Column(name="Partner", length=20)
    public String getPartner() {
        return this.partner;
    }
    
    public void setPartner(String partner) {
        this.partner = partner;
    }

    
    @Column(name="ConversionGroup", nullable=false, length=128)
    public String getConversionGroup() {
        return this.conversionGroup;
    }
    
    public void setConversionGroup(String conversionGroup) {
        this.conversionGroup = conversionGroup;
    }

    
    @Column(name="SourceValue", nullable=false)
    public String getSourceValue() {
        return this.sourceValue;
    }
    
    public void setSourceValue(String sourceValue) {
        this.sourceValue = sourceValue;
    }

    
    @Column(name="TranslatedValue", nullable=false)
    public String getTranslatedValue() {
        return this.translatedValue;
    }
    
    public void setTranslatedValue(String translatedValue) {
        this.translatedValue = translatedValue;
    }

    
    @Column(name="TranslatedType", nullable=false)
    public int getTranslatedType() {
        return this.translatedType;
    }
    
    public void setTranslatedType(int translatedType) {
        this.translatedType = translatedType;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="ConversionDefinition_ConditionDefinition", catalog="integrationConfigDB", joinColumns = { 
        @JoinColumn(name="ConversionDefinitionPK", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="ConditionDefinitionPK", nullable=false, updatable=false) })
    public Set<ConditionDefinition> getConditionDefinitions() {
        return this.conditionDefinitions;
    }
    
    public void setConditionDefinitions(Set<ConditionDefinition> conditionDefinitions) {
        this.conditionDefinitions = conditionDefinitions;
    }




}


