package com.galexis.configdb;
// Generated Sep 6, 2013 10:20:44 AM by Hibernate Tools 3.6.0


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * DataStoreField generated by hbm2java
 */
@Entity
@Table(name="DataStoreField"
    ,catalog="integrationConfigDB"
    , uniqueConstraints = {@UniqueConstraint(columnNames={"FieldName", "DataStoreEntityPK", "DataStoreFieldType", "AccessPath"}), @UniqueConstraint(columnNames={"FieldName", "AccessPath", "DataStoreEntityPK"})} 
)
public class DataStoreField  implements java.io.Serializable {


     private int pk;
     private DataStoreEntity dataStoreEntity;
     private Metadata metadata;
     private String fieldName;
     private String descriptiveName;
     private String accessPath;
     private int dataStoreFieldType;
     private char mode;
     private Integer position;
     private Integer length;
     private Integer scale;
     private Boolean mandatory;
     private String defaultConversionGroup;
     private String description;
     private Set<DataStoreRelationship> dataStoreRelationships = new HashSet<DataStoreRelationship>(0);
     private Set<ConditionSchema2dataStoreFieldRelation> conditionSchema2dataStoreFieldRelations = new HashSet<ConditionSchema2dataStoreFieldRelation>(0);
     private Set<BusinessServiceDefinitionDataStoreField> businessServiceDefinitionDataStoreFields = new HashSet<BusinessServiceDefinitionDataStoreField>(0);

    public DataStoreField() {
    }

	
    public DataStoreField(int pk, DataStoreEntity dataStoreEntity, Metadata metadata, String fieldName, String accessPath, int dataStoreFieldType, char mode) {
        this.pk = pk;
        this.dataStoreEntity = dataStoreEntity;
        this.metadata = metadata;
        this.fieldName = fieldName;
        this.accessPath = accessPath;
        this.dataStoreFieldType = dataStoreFieldType;
        this.mode = mode;
    }
    public DataStoreField(int pk, DataStoreEntity dataStoreEntity, Metadata metadata, String fieldName, String descriptiveName, String accessPath, int dataStoreFieldType, char mode, Integer position, Integer length, Integer scale, Boolean mandatory, String defaultConversionGroup, String description, Set<DataStoreRelationship> dataStoreRelationships, Set<ConditionSchema2dataStoreFieldRelation> conditionSchema2dataStoreFieldRelations, Set<BusinessServiceDefinitionDataStoreField> businessServiceDefinitionDataStoreFields) {
       this.pk = pk;
       this.dataStoreEntity = dataStoreEntity;
       this.metadata = metadata;
       this.fieldName = fieldName;
       this.descriptiveName = descriptiveName;
       this.accessPath = accessPath;
       this.dataStoreFieldType = dataStoreFieldType;
       this.mode = mode;
       this.position = position;
       this.length = length;
       this.scale = scale;
       this.mandatory = mandatory;
       this.defaultConversionGroup = defaultConversionGroup;
       this.description = description;
       this.dataStoreRelationships = dataStoreRelationships;
       this.conditionSchema2dataStoreFieldRelations = conditionSchema2dataStoreFieldRelations;
       this.businessServiceDefinitionDataStoreFields = businessServiceDefinitionDataStoreFields;
    }
   
     @Id 

    
    @Column(name="PK", unique=true, nullable=false)
    public int getPk() {
        return this.pk;
    }
    
    public void setPk(int pk) {
        this.pk = pk;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="DataStoreEntityPK", nullable=false)
    public DataStoreEntity getDataStoreEntity() {
        return this.dataStoreEntity;
    }
    
    public void setDataStoreEntity(DataStoreEntity dataStoreEntity) {
        this.dataStoreEntity = dataStoreEntity;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MetadataPK", nullable=false)
    public Metadata getMetadata() {
        return this.metadata;
    }
    
    public void setMetadata(Metadata metadata) {
        this.metadata = metadata;
    }

    
    @Column(name="FieldName", nullable=false, length=64)
    public String getFieldName() {
        return this.fieldName;
    }
    
    public void setFieldName(String fieldName) {
        this.fieldName = fieldName;
    }

    
    @Column(name="DescriptiveName", length=128)
    public String getDescriptiveName() {
        return this.descriptiveName;
    }
    
    public void setDescriptiveName(String descriptiveName) {
        this.descriptiveName = descriptiveName;
    }

    
    @Column(name="AccessPath", nullable=false, length=256)
    public String getAccessPath() {
        return this.accessPath;
    }
    
    public void setAccessPath(String accessPath) {
        this.accessPath = accessPath;
    }

    
    @Column(name="DataStoreFieldType", nullable=false)
    public int getDataStoreFieldType() {
        return this.dataStoreFieldType;
    }
    
    public void setDataStoreFieldType(int dataStoreFieldType) {
        this.dataStoreFieldType = dataStoreFieldType;
    }

    
    @Column(name="Mode", nullable=false, length=1)
    public char getMode() {
        return this.mode;
    }
    
    public void setMode(char mode) {
        this.mode = mode;
    }

    
    @Column(name="Position")
    public Integer getPosition() {
        return this.position;
    }
    
    public void setPosition(Integer position) {
        this.position = position;
    }

    
    @Column(name="Length")
    public Integer getLength() {
        return this.length;
    }
    
    public void setLength(Integer length) {
        this.length = length;
    }

    
    @Column(name="Scale")
    public Integer getScale() {
        return this.scale;
    }
    
    public void setScale(Integer scale) {
        this.scale = scale;
    }

    
    @Column(name="Mandatory")
    public Boolean getMandatory() {
        return this.mandatory;
    }
    
    public void setMandatory(Boolean mandatory) {
        this.mandatory = mandatory;
    }

    
    @Column(name="DefaultConversionGroup", length=128)
    public String getDefaultConversionGroup() {
        return this.defaultConversionGroup;
    }
    
    public void setDefaultConversionGroup(String defaultConversionGroup) {
        this.defaultConversionGroup = defaultConversionGroup;
    }

    
    @Column(name="Description")
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="DataStoreRelationship_DataStoreField", catalog="integrationConfigDB", joinColumns = { 
        @JoinColumn(name="DataStoreFieldPK", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="DataStoreRelationshipPK", nullable=false, updatable=false) })
    public Set<DataStoreRelationship> getDataStoreRelationships() {
        return this.dataStoreRelationships;
    }
    
    public void setDataStoreRelationships(Set<DataStoreRelationship> dataStoreRelationships) {
        this.dataStoreRelationships = dataStoreRelationships;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="dataStoreField")
    public Set<ConditionSchema2dataStoreFieldRelation> getConditionSchema2dataStoreFieldRelations() {
        return this.conditionSchema2dataStoreFieldRelations;
    }
    
    public void setConditionSchema2dataStoreFieldRelations(Set<ConditionSchema2dataStoreFieldRelation> conditionSchema2dataStoreFieldRelations) {
        this.conditionSchema2dataStoreFieldRelations = conditionSchema2dataStoreFieldRelations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="dataStoreField")
    public Set<BusinessServiceDefinitionDataStoreField> getBusinessServiceDefinitionDataStoreFields() {
        return this.businessServiceDefinitionDataStoreFields;
    }
    
    public void setBusinessServiceDefinitionDataStoreFields(Set<BusinessServiceDefinitionDataStoreField> businessServiceDefinitionDataStoreFields) {
        this.businessServiceDefinitionDataStoreFields = businessServiceDefinitionDataStoreFields;
    }




}


