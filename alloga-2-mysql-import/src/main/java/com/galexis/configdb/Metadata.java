package com.galexis.configdb;
// Generated Sep 6, 2013 10:20:44 AM by Hibernate Tools 3.6.0


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Metadata generated by hbm2java
 */
@Entity
@Table(name="Metadata"
    ,catalog="integrationConfigDB"
)
public class Metadata  implements java.io.Serializable {


     private int pk;
     private Date creationDate;
     private Date modificationDate;
     private String creator;
     private String modificator;
     private char state;
     private Set<MappingDefinition> mappingDefinitions = new HashSet<MappingDefinition>(0);
     private Set<Sqlstatement> sqlstatements = new HashSet<Sqlstatement>(0);
     private Set<BusinessServiceDefinition> businessServiceDefinitions = new HashSet<BusinessServiceDefinition>(0);
     private Set<DataStoreField> dataStoreFields = new HashSet<DataStoreField>(0);
     private Set<TaskMessageTypeDefinition> taskMessageTypeDefinitions = new HashSet<TaskMessageTypeDefinition>(0);
     private Set<DataMapping> dataMappings = new HashSet<DataMapping>(0);
     private Set<DataStoreRelationship> dataStoreRelationships = new HashSet<DataStoreRelationship>(0);
     private Set<BusinessServiceDefinitionDataStoreField> businessServiceDefinitionDataStoreFields = new HashSet<BusinessServiceDefinitionDataStoreField>(0);
     private Set<MsgTypeDef2msgTypeDef> msgTypeDef2msgTypeDefs = new HashSet<MsgTypeDef2msgTypeDef>(0);
     private Set<ConfigurationKey> configurationKeys = new HashSet<ConfigurationKey>(0);
     private Set<DataStoreEntity> dataStoreEntities = new HashSet<DataStoreEntity>(0);
     private Set<ValueConversion> valueConversions = new HashSet<ValueConversion>(0);
     private Set<StartTaskContentElement> startTaskContentElements = new HashSet<StartTaskContentElement>(0);
     private Set<FieldAccessorDataStoreField> fieldAccessorDataStoreFields = new HashSet<FieldAccessorDataStoreField>(0);
     private Set<PartnerGroup> partnerGroups = new HashSet<PartnerGroup>(0);
     private Set<MappingDefinitionBusinessServiceDefinition> mappingDefinitionBusinessServiceDefinitions = new HashSet<MappingDefinitionBusinessServiceDefinition>(0);
     private Set<ConversionDefinition> conversionDefinitions = new HashSet<ConversionDefinition>(0);
     private Set<ConditionSchema> conditionSchemas = new HashSet<ConditionSchema>(0);
     private Set<ConfigurationHeaderMessageTypeDefinition> configurationHeaderMessageTypeDefinitions = new HashSet<ConfigurationHeaderMessageTypeDefinition>(0);
     private Set<BackendResource> backendResources = new HashSet<BackendResource>(0);
     private Set<MessageTypeDefinition> messageTypeDefinitions = new HashSet<MessageTypeDefinition>(0);
     private Set<StartTaskContentAttributeValue> startTaskContentAttributeValues = new HashSet<StartTaskContentAttributeValue>(0);
     private Set<FieldAccessor> fieldAccessors = new HashSet<FieldAccessor>(0);
     private Set<HandlerMappingConfiguration> handlerMappingConfigurations = new HashSet<HandlerMappingConfiguration>(0);
     private Set<StartTaskContentAttribute> startTaskContentAttributes = new HashSet<StartTaskContentAttribute>(0);
     private Set<Partner> partners = new HashSet<Partner>(0);
     private Set<ConfigurationValue> configurationValues = new HashSet<ConfigurationValue>(0);
     private Set<MappingConfiguration> mappingConfigurations = new HashSet<MappingConfiguration>(0);
     private Set<ConfigurationHeader> configurationHeaders = new HashSet<ConfigurationHeader>(0);
     private Set<ConditionDefinition> conditionDefinitions = new HashSet<ConditionDefinition>(0);

    public Metadata() {
    }

	
    public Metadata(int pk, Date creationDate, String creator, char state) {
        this.pk = pk;
        this.creationDate = creationDate;
        this.creator = creator;
        this.state = state;
    }
    public Metadata(int pk, Date creationDate, Date modificationDate, String creator, String modificator, char state, Set<MappingDefinition> mappingDefinitions, Set<Sqlstatement> sqlstatements, Set<BusinessServiceDefinition> businessServiceDefinitions, Set<DataStoreField> dataStoreFields, Set<TaskMessageTypeDefinition> taskMessageTypeDefinitions, Set<DataMapping> dataMappings, Set<DataStoreRelationship> dataStoreRelationships, Set<BusinessServiceDefinitionDataStoreField> businessServiceDefinitionDataStoreFields, Set<MsgTypeDef2msgTypeDef> msgTypeDef2msgTypeDefs, Set<ConfigurationKey> configurationKeys, Set<DataStoreEntity> dataStoreEntities, Set<ValueConversion> valueConversions, Set<StartTaskContentElement> startTaskContentElements, Set<FieldAccessorDataStoreField> fieldAccessorDataStoreFields, Set<PartnerGroup> partnerGroups, Set<MappingDefinitionBusinessServiceDefinition> mappingDefinitionBusinessServiceDefinitions, Set<ConversionDefinition> conversionDefinitions, Set<ConditionSchema> conditionSchemas, Set<ConfigurationHeaderMessageTypeDefinition> configurationHeaderMessageTypeDefinitions, Set<BackendResource> backendResources, Set<MessageTypeDefinition> messageTypeDefinitions, Set<StartTaskContentAttributeValue> startTaskContentAttributeValues, Set<FieldAccessor> fieldAccessors, Set<HandlerMappingConfiguration> handlerMappingConfigurations, Set<StartTaskContentAttribute> startTaskContentAttributes, Set<Partner> partners, Set<ConfigurationValue> configurationValues, Set<MappingConfiguration> mappingConfigurations, Set<ConfigurationHeader> configurationHeaders, Set<ConditionDefinition> conditionDefinitions) {
       this.pk = pk;
       this.creationDate = creationDate;
       this.modificationDate = modificationDate;
       this.creator = creator;
       this.modificator = modificator;
       this.state = state;
       this.mappingDefinitions = mappingDefinitions;
       this.sqlstatements = sqlstatements;
       this.businessServiceDefinitions = businessServiceDefinitions;
       this.dataStoreFields = dataStoreFields;
       this.taskMessageTypeDefinitions = taskMessageTypeDefinitions;
       this.dataMappings = dataMappings;
       this.dataStoreRelationships = dataStoreRelationships;
       this.businessServiceDefinitionDataStoreFields = businessServiceDefinitionDataStoreFields;
       this.msgTypeDef2msgTypeDefs = msgTypeDef2msgTypeDefs;
       this.configurationKeys = configurationKeys;
       this.dataStoreEntities = dataStoreEntities;
       this.valueConversions = valueConversions;
       this.startTaskContentElements = startTaskContentElements;
       this.fieldAccessorDataStoreFields = fieldAccessorDataStoreFields;
       this.partnerGroups = partnerGroups;
       this.mappingDefinitionBusinessServiceDefinitions = mappingDefinitionBusinessServiceDefinitions;
       this.conversionDefinitions = conversionDefinitions;
       this.conditionSchemas = conditionSchemas;
       this.configurationHeaderMessageTypeDefinitions = configurationHeaderMessageTypeDefinitions;
       this.backendResources = backendResources;
       this.messageTypeDefinitions = messageTypeDefinitions;
       this.startTaskContentAttributeValues = startTaskContentAttributeValues;
       this.fieldAccessors = fieldAccessors;
       this.handlerMappingConfigurations = handlerMappingConfigurations;
       this.startTaskContentAttributes = startTaskContentAttributes;
       this.partners = partners;
       this.configurationValues = configurationValues;
       this.mappingConfigurations = mappingConfigurations;
       this.configurationHeaders = configurationHeaders;
       this.conditionDefinitions = conditionDefinitions;
    }
   
     @Id 

    
    @Column(name="PK", unique=true, nullable=false)
    public int getPk() {
        return this.pk;
    }
    
    public void setPk(int pk) {
        this.pk = pk;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CreationDate", nullable=false, length=19)
    public Date getCreationDate() {
        return this.creationDate;
    }
    
    public void setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="ModificationDate", length=19)
    public Date getModificationDate() {
        return this.modificationDate;
    }
    
    public void setModificationDate(Date modificationDate) {
        this.modificationDate = modificationDate;
    }

    
    @Column(name="Creator", nullable=false, length=32)
    public String getCreator() {
        return this.creator;
    }
    
    public void setCreator(String creator) {
        this.creator = creator;
    }

    
    @Column(name="Modificator", length=32)
    public String getModificator() {
        return this.modificator;
    }
    
    public void setModificator(String modificator) {
        this.modificator = modificator;
    }

    
    @Column(name="State", nullable=false, length=1)
    public char getState() {
        return this.state;
    }
    
    public void setState(char state) {
        this.state = state;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<MappingDefinition> getMappingDefinitions() {
        return this.mappingDefinitions;
    }
    
    public void setMappingDefinitions(Set<MappingDefinition> mappingDefinitions) {
        this.mappingDefinitions = mappingDefinitions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<Sqlstatement> getSqlstatements() {
        return this.sqlstatements;
    }
    
    public void setSqlstatements(Set<Sqlstatement> sqlstatements) {
        this.sqlstatements = sqlstatements;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<BusinessServiceDefinition> getBusinessServiceDefinitions() {
        return this.businessServiceDefinitions;
    }
    
    public void setBusinessServiceDefinitions(Set<BusinessServiceDefinition> businessServiceDefinitions) {
        this.businessServiceDefinitions = businessServiceDefinitions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<DataStoreField> getDataStoreFields() {
        return this.dataStoreFields;
    }
    
    public void setDataStoreFields(Set<DataStoreField> dataStoreFields) {
        this.dataStoreFields = dataStoreFields;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<TaskMessageTypeDefinition> getTaskMessageTypeDefinitions() {
        return this.taskMessageTypeDefinitions;
    }
    
    public void setTaskMessageTypeDefinitions(Set<TaskMessageTypeDefinition> taskMessageTypeDefinitions) {
        this.taskMessageTypeDefinitions = taskMessageTypeDefinitions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<DataMapping> getDataMappings() {
        return this.dataMappings;
    }
    
    public void setDataMappings(Set<DataMapping> dataMappings) {
        this.dataMappings = dataMappings;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<DataStoreRelationship> getDataStoreRelationships() {
        return this.dataStoreRelationships;
    }
    
    public void setDataStoreRelationships(Set<DataStoreRelationship> dataStoreRelationships) {
        this.dataStoreRelationships = dataStoreRelationships;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<BusinessServiceDefinitionDataStoreField> getBusinessServiceDefinitionDataStoreFields() {
        return this.businessServiceDefinitionDataStoreFields;
    }
    
    public void setBusinessServiceDefinitionDataStoreFields(Set<BusinessServiceDefinitionDataStoreField> businessServiceDefinitionDataStoreFields) {
        this.businessServiceDefinitionDataStoreFields = businessServiceDefinitionDataStoreFields;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<MsgTypeDef2msgTypeDef> getMsgTypeDef2msgTypeDefs() {
        return this.msgTypeDef2msgTypeDefs;
    }
    
    public void setMsgTypeDef2msgTypeDefs(Set<MsgTypeDef2msgTypeDef> msgTypeDef2msgTypeDefs) {
        this.msgTypeDef2msgTypeDefs = msgTypeDef2msgTypeDefs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<ConfigurationKey> getConfigurationKeys() {
        return this.configurationKeys;
    }
    
    public void setConfigurationKeys(Set<ConfigurationKey> configurationKeys) {
        this.configurationKeys = configurationKeys;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<DataStoreEntity> getDataStoreEntities() {
        return this.dataStoreEntities;
    }
    
    public void setDataStoreEntities(Set<DataStoreEntity> dataStoreEntities) {
        this.dataStoreEntities = dataStoreEntities;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<ValueConversion> getValueConversions() {
        return this.valueConversions;
    }
    
    public void setValueConversions(Set<ValueConversion> valueConversions) {
        this.valueConversions = valueConversions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<StartTaskContentElement> getStartTaskContentElements() {
        return this.startTaskContentElements;
    }
    
    public void setStartTaskContentElements(Set<StartTaskContentElement> startTaskContentElements) {
        this.startTaskContentElements = startTaskContentElements;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<FieldAccessorDataStoreField> getFieldAccessorDataStoreFields() {
        return this.fieldAccessorDataStoreFields;
    }
    
    public void setFieldAccessorDataStoreFields(Set<FieldAccessorDataStoreField> fieldAccessorDataStoreFields) {
        this.fieldAccessorDataStoreFields = fieldAccessorDataStoreFields;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<PartnerGroup> getPartnerGroups() {
        return this.partnerGroups;
    }
    
    public void setPartnerGroups(Set<PartnerGroup> partnerGroups) {
        this.partnerGroups = partnerGroups;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<MappingDefinitionBusinessServiceDefinition> getMappingDefinitionBusinessServiceDefinitions() {
        return this.mappingDefinitionBusinessServiceDefinitions;
    }
    
    public void setMappingDefinitionBusinessServiceDefinitions(Set<MappingDefinitionBusinessServiceDefinition> mappingDefinitionBusinessServiceDefinitions) {
        this.mappingDefinitionBusinessServiceDefinitions = mappingDefinitionBusinessServiceDefinitions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<ConversionDefinition> getConversionDefinitions() {
        return this.conversionDefinitions;
    }
    
    public void setConversionDefinitions(Set<ConversionDefinition> conversionDefinitions) {
        this.conversionDefinitions = conversionDefinitions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<ConditionSchema> getConditionSchemas() {
        return this.conditionSchemas;
    }
    
    public void setConditionSchemas(Set<ConditionSchema> conditionSchemas) {
        this.conditionSchemas = conditionSchemas;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<ConfigurationHeaderMessageTypeDefinition> getConfigurationHeaderMessageTypeDefinitions() {
        return this.configurationHeaderMessageTypeDefinitions;
    }
    
    public void setConfigurationHeaderMessageTypeDefinitions(Set<ConfigurationHeaderMessageTypeDefinition> configurationHeaderMessageTypeDefinitions) {
        this.configurationHeaderMessageTypeDefinitions = configurationHeaderMessageTypeDefinitions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<BackendResource> getBackendResources() {
        return this.backendResources;
    }
    
    public void setBackendResources(Set<BackendResource> backendResources) {
        this.backendResources = backendResources;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<MessageTypeDefinition> getMessageTypeDefinitions() {
        return this.messageTypeDefinitions;
    }
    
    public void setMessageTypeDefinitions(Set<MessageTypeDefinition> messageTypeDefinitions) {
        this.messageTypeDefinitions = messageTypeDefinitions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<StartTaskContentAttributeValue> getStartTaskContentAttributeValues() {
        return this.startTaskContentAttributeValues;
    }
    
    public void setStartTaskContentAttributeValues(Set<StartTaskContentAttributeValue> startTaskContentAttributeValues) {
        this.startTaskContentAttributeValues = startTaskContentAttributeValues;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<FieldAccessor> getFieldAccessors() {
        return this.fieldAccessors;
    }
    
    public void setFieldAccessors(Set<FieldAccessor> fieldAccessors) {
        this.fieldAccessors = fieldAccessors;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<HandlerMappingConfiguration> getHandlerMappingConfigurations() {
        return this.handlerMappingConfigurations;
    }
    
    public void setHandlerMappingConfigurations(Set<HandlerMappingConfiguration> handlerMappingConfigurations) {
        this.handlerMappingConfigurations = handlerMappingConfigurations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<StartTaskContentAttribute> getStartTaskContentAttributes() {
        return this.startTaskContentAttributes;
    }
    
    public void setStartTaskContentAttributes(Set<StartTaskContentAttribute> startTaskContentAttributes) {
        this.startTaskContentAttributes = startTaskContentAttributes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<Partner> getPartners() {
        return this.partners;
    }
    
    public void setPartners(Set<Partner> partners) {
        this.partners = partners;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<ConfigurationValue> getConfigurationValues() {
        return this.configurationValues;
    }
    
    public void setConfigurationValues(Set<ConfigurationValue> configurationValues) {
        this.configurationValues = configurationValues;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<MappingConfiguration> getMappingConfigurations() {
        return this.mappingConfigurations;
    }
    
    public void setMappingConfigurations(Set<MappingConfiguration> mappingConfigurations) {
        this.mappingConfigurations = mappingConfigurations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<ConfigurationHeader> getConfigurationHeaders() {
        return this.configurationHeaders;
    }
    
    public void setConfigurationHeaders(Set<ConfigurationHeader> configurationHeaders) {
        this.configurationHeaders = configurationHeaders;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="metadata")
    public Set<ConditionDefinition> getConditionDefinitions() {
        return this.conditionDefinitions;
    }
    
    public void setConditionDefinitions(Set<ConditionDefinition> conditionDefinitions) {
        this.conditionDefinitions = conditionDefinitions;
    }




}


