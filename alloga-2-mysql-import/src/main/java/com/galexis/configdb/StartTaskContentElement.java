package com.galexis.configdb;
// Generated Sep 6, 2013 10:20:44 AM by Hibernate Tools 3.6.0


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Version;

/**
 * StartTaskContentElement generated by hbm2java
 */
@Entity
@Table(name="StartTaskContentElement"
    ,catalog="integrationConfigDB"
)
public class StartTaskContentElement  implements java.io.Serializable {


     private Integer pk;
     private int version;
     private BackendResource backendResource;
     private StartTaskContentAttribute startTaskContentAttribute;
     private Metadata metadata;
     private String name;
     private String token;
     private int state;
     private Integer parentPk;
     private Set<StartTaskContentElement2startTaskContentElement> startTaskContentElement2startTaskContentElementsForStartTaskContentElementPk2 = new HashSet<StartTaskContentElement2startTaskContentElement>(0);
     private Set<TaskMessageTypeDefinition> taskMessageTypeDefinitions = new HashSet<TaskMessageTypeDefinition>(0);
     private Set<MessageTypeDefinition> messageTypeDefinitions = new HashSet<MessageTypeDefinition>(0);
     private Set<StartTaskContentAttribute> startTaskContentAttributes = new HashSet<StartTaskContentAttribute>(0);
     private Set<StartTaskContentElement2startTaskContentElement> startTaskContentElement2startTaskContentElementsForStartTaskContentElementPk = new HashSet<StartTaskContentElement2startTaskContentElement>(0);

    public StartTaskContentElement() {
    }

	
    public StartTaskContentElement(BackendResource backendResource, Metadata metadata, String name, String token, int state) {
        this.backendResource = backendResource;
        this.metadata = metadata;
        this.name = name;
        this.token = token;
        this.state = state;
    }
    public StartTaskContentElement(BackendResource backendResource, StartTaskContentAttribute startTaskContentAttribute, Metadata metadata, String name, String token, int state, Integer parentPk, Set<StartTaskContentElement2startTaskContentElement> startTaskContentElement2startTaskContentElementsForStartTaskContentElementPk2, Set<TaskMessageTypeDefinition> taskMessageTypeDefinitions, Set<MessageTypeDefinition> messageTypeDefinitions, Set<StartTaskContentAttribute> startTaskContentAttributes, Set<StartTaskContentElement2startTaskContentElement> startTaskContentElement2startTaskContentElementsForStartTaskContentElementPk) {
       this.backendResource = backendResource;
       this.startTaskContentAttribute = startTaskContentAttribute;
       this.metadata = metadata;
       this.name = name;
       this.token = token;
       this.state = state;
       this.parentPk = parentPk;
       this.startTaskContentElement2startTaskContentElementsForStartTaskContentElementPk2 = startTaskContentElement2startTaskContentElementsForStartTaskContentElementPk2;
       this.taskMessageTypeDefinitions = taskMessageTypeDefinitions;
       this.messageTypeDefinitions = messageTypeDefinitions;
       this.startTaskContentAttributes = startTaskContentAttributes;
       this.startTaskContentElement2startTaskContentElementsForStartTaskContentElementPk = startTaskContentElement2startTaskContentElementsForStartTaskContentElementPk;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="PK", unique=true, nullable=false)
    public Integer getPk() {
        return this.pk;
    }
    
    public void setPk(Integer pk) {
        this.pk = pk;
    }

    @Version
    @Column(name="Version", nullable=false)
    public int getVersion() {
        return this.version;
    }
    
    public void setVersion(int version) {
        this.version = version;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="BackendResourcePK", nullable=false)
    public BackendResource getBackendResource() {
        return this.backendResource;
    }
    
    public void setBackendResource(BackendResource backendResource) {
        this.backendResource = backendResource;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ElementTextAttributePK")
    public StartTaskContentAttribute getStartTaskContentAttribute() {
        return this.startTaskContentAttribute;
    }
    
    public void setStartTaskContentAttribute(StartTaskContentAttribute startTaskContentAttribute) {
        this.startTaskContentAttribute = startTaskContentAttribute;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MetadataPK", nullable=false)
    public Metadata getMetadata() {
        return this.metadata;
    }
    
    public void setMetadata(Metadata metadata) {
        this.metadata = metadata;
    }

    
    @Column(name="Name", nullable=false)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="Token", nullable=false)
    public String getToken() {
        return this.token;
    }
    
    public void setToken(String token) {
        this.token = token;
    }

    
    @Column(name="State", nullable=false)
    public int getState() {
        return this.state;
    }
    
    public void setState(int state) {
        this.state = state;
    }

    
    @Column(name="ParentPK")
    public Integer getParentPk() {
        return this.parentPk;
    }
    
    public void setParentPk(Integer parentPk) {
        this.parentPk = parentPk;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="startTaskContentElementByStartTaskContentElementPk2")
    public Set<StartTaskContentElement2startTaskContentElement> getStartTaskContentElement2startTaskContentElementsForStartTaskContentElementPk2() {
        return this.startTaskContentElement2startTaskContentElementsForStartTaskContentElementPk2;
    }
    
    public void setStartTaskContentElement2startTaskContentElementsForStartTaskContentElementPk2(Set<StartTaskContentElement2startTaskContentElement> startTaskContentElement2startTaskContentElementsForStartTaskContentElementPk2) {
        this.startTaskContentElement2startTaskContentElementsForStartTaskContentElementPk2 = startTaskContentElement2startTaskContentElementsForStartTaskContentElementPk2;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="startTaskContentElement")
    public Set<TaskMessageTypeDefinition> getTaskMessageTypeDefinitions() {
        return this.taskMessageTypeDefinitions;
    }
    
    public void setTaskMessageTypeDefinitions(Set<TaskMessageTypeDefinition> taskMessageTypeDefinitions) {
        this.taskMessageTypeDefinitions = taskMessageTypeDefinitions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="startTaskContentElement")
    public Set<MessageTypeDefinition> getMessageTypeDefinitions() {
        return this.messageTypeDefinitions;
    }
    
    public void setMessageTypeDefinitions(Set<MessageTypeDefinition> messageTypeDefinitions) {
        this.messageTypeDefinitions = messageTypeDefinitions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="startTaskContentElement")
    public Set<StartTaskContentAttribute> getStartTaskContentAttributes() {
        return this.startTaskContentAttributes;
    }
    
    public void setStartTaskContentAttributes(Set<StartTaskContentAttribute> startTaskContentAttributes) {
        this.startTaskContentAttributes = startTaskContentAttributes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="startTaskContentElementByStartTaskContentElementPk")
    public Set<StartTaskContentElement2startTaskContentElement> getStartTaskContentElement2startTaskContentElementsForStartTaskContentElementPk() {
        return this.startTaskContentElement2startTaskContentElementsForStartTaskContentElementPk;
    }
    
    public void setStartTaskContentElement2startTaskContentElementsForStartTaskContentElementPk(Set<StartTaskContentElement2startTaskContentElement> startTaskContentElement2startTaskContentElementsForStartTaskContentElementPk) {
        this.startTaskContentElement2startTaskContentElementsForStartTaskContentElementPk = startTaskContentElement2startTaskContentElementsForStartTaskContentElementPk;
    }




}


