package com.galexis.configdb;
// Generated Sep 6, 2013 10:20:44 AM by Hibernate Tools 3.6.0


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * DataStoreRelationship generated by hbm2java
 */
@Entity
@Table(name="DataStoreRelationship"
    ,catalog="integrationConfigDB"
)
public class DataStoreRelationship  implements java.io.Serializable {


     private int pk;
     private DataStoreEntity dataStoreEntityByForeignDataStoreEntityPk;
     private DataStoreEntity dataStoreEntityByParentDataStoreEntityPk;
     private Metadata metadata;
     private Set<DataStoreField> dataStoreFields = new HashSet<DataStoreField>(0);

    public DataStoreRelationship() {
    }

	
    public DataStoreRelationship(int pk, DataStoreEntity dataStoreEntityByForeignDataStoreEntityPk, DataStoreEntity dataStoreEntityByParentDataStoreEntityPk, Metadata metadata) {
        this.pk = pk;
        this.dataStoreEntityByForeignDataStoreEntityPk = dataStoreEntityByForeignDataStoreEntityPk;
        this.dataStoreEntityByParentDataStoreEntityPk = dataStoreEntityByParentDataStoreEntityPk;
        this.metadata = metadata;
    }
    public DataStoreRelationship(int pk, DataStoreEntity dataStoreEntityByForeignDataStoreEntityPk, DataStoreEntity dataStoreEntityByParentDataStoreEntityPk, Metadata metadata, Set<DataStoreField> dataStoreFields) {
       this.pk = pk;
       this.dataStoreEntityByForeignDataStoreEntityPk = dataStoreEntityByForeignDataStoreEntityPk;
       this.dataStoreEntityByParentDataStoreEntityPk = dataStoreEntityByParentDataStoreEntityPk;
       this.metadata = metadata;
       this.dataStoreFields = dataStoreFields;
    }
   
     @Id 

    
    @Column(name="PK", unique=true, nullable=false)
    public int getPk() {
        return this.pk;
    }
    
    public void setPk(int pk) {
        this.pk = pk;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ForeignDataStoreEntityPK", nullable=false)
    public DataStoreEntity getDataStoreEntityByForeignDataStoreEntityPk() {
        return this.dataStoreEntityByForeignDataStoreEntityPk;
    }
    
    public void setDataStoreEntityByForeignDataStoreEntityPk(DataStoreEntity dataStoreEntityByForeignDataStoreEntityPk) {
        this.dataStoreEntityByForeignDataStoreEntityPk = dataStoreEntityByForeignDataStoreEntityPk;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ParentDataStoreEntityPK", nullable=false)
    public DataStoreEntity getDataStoreEntityByParentDataStoreEntityPk() {
        return this.dataStoreEntityByParentDataStoreEntityPk;
    }
    
    public void setDataStoreEntityByParentDataStoreEntityPk(DataStoreEntity dataStoreEntityByParentDataStoreEntityPk) {
        this.dataStoreEntityByParentDataStoreEntityPk = dataStoreEntityByParentDataStoreEntityPk;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MetadataPK", nullable=false)
    public Metadata getMetadata() {
        return this.metadata;
    }
    
    public void setMetadata(Metadata metadata) {
        this.metadata = metadata;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="DataStoreRelationship_DataStoreField", catalog="integrationConfigDB", joinColumns = { 
        @JoinColumn(name="DataStoreRelationshipPK", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="DataStoreFieldPK", nullable=false, updatable=false) })
    public Set<DataStoreField> getDataStoreFields() {
        return this.dataStoreFields;
    }
    
    public void setDataStoreFields(Set<DataStoreField> dataStoreFields) {
        this.dataStoreFields = dataStoreFields;
    }




}


