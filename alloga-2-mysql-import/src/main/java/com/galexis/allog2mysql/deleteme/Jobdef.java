package com.galexis.allog2mysql.deleteme;
// Generated Sep 6, 2013 9:37:59 AM by Hibernate Tools 3.6.0


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * Jobdef generated by hbm2java
 */
@Entity
@Table(name="JOBDEF"
    ,schema="INTEGAP"
    ,catalog="CHGALE11RDB"
)
public class Jobdef  implements java.io.Serializable {


     private long pk;
     private String version;
     private Contrdef contrdef;
     private Selstcelem selstcelem;
     private String jobname;
     private String backendresource;
     private String jobclass;
     private String command;
     private String executionmode;
     private String taskmessagetype;
     private String taskdefinitionversion;
     private String content;
     private short triggerrepeatcount;
     private long triggerrepepeatinterval;
     private String groupname;
     private String jobdescription;
     private char volatility;
     private char durability;
     private char recover;
     private char refire;
     private char autoprocessinglog;
     private String processinghost;
     private Character executeaftertime;
     private Date lastruntime;
     private Date recordcreationtime;
     private Set<Triggerdef> triggerdefs = new HashSet<Triggerdef>(0);
     private Set<Selmsgtdef> selmsgtdefs = new HashSet<Selmsgtdef>(0);

    public Jobdef() {
    }

	
    public Jobdef(long pk, Contrdef contrdef, String jobname, String backendresource, String jobclass, String executionmode, String taskmessagetype, String taskdefinitionversion, String content, short triggerrepeatcount, long triggerrepepeatinterval, String groupname, char volatility, char durability, char recover, char refire, char autoprocessinglog, String processinghost, Date recordcreationtime) {
        this.pk = pk;
        this.contrdef = contrdef;
        this.jobname = jobname;
        this.backendresource = backendresource;
        this.jobclass = jobclass;
        this.executionmode = executionmode;
        this.taskmessagetype = taskmessagetype;
        this.taskdefinitionversion = taskdefinitionversion;
        this.content = content;
        this.triggerrepeatcount = triggerrepeatcount;
        this.triggerrepepeatinterval = triggerrepepeatinterval;
        this.groupname = groupname;
        this.volatility = volatility;
        this.durability = durability;
        this.recover = recover;
        this.refire = refire;
        this.autoprocessinglog = autoprocessinglog;
        this.processinghost = processinghost;
        this.recordcreationtime = recordcreationtime;
    }
    public Jobdef(long pk, Contrdef contrdef, Selstcelem selstcelem, String jobname, String backendresource, String jobclass, String command, String executionmode, String taskmessagetype, String taskdefinitionversion, String content, short triggerrepeatcount, long triggerrepepeatinterval, String groupname, String jobdescription, char volatility, char durability, char recover, char refire, char autoprocessinglog, String processinghost, Character executeaftertime, Date lastruntime, Date recordcreationtime, Set<Triggerdef> triggerdefs, Set<Selmsgtdef> selmsgtdefs) {
       this.pk = pk;
       this.contrdef = contrdef;
       this.selstcelem = selstcelem;
       this.jobname = jobname;
       this.backendresource = backendresource;
       this.jobclass = jobclass;
       this.command = command;
       this.executionmode = executionmode;
       this.taskmessagetype = taskmessagetype;
       this.taskdefinitionversion = taskdefinitionversion;
       this.content = content;
       this.triggerrepeatcount = triggerrepeatcount;
       this.triggerrepepeatinterval = triggerrepepeatinterval;
       this.groupname = groupname;
       this.jobdescription = jobdescription;
       this.volatility = volatility;
       this.durability = durability;
       this.recover = recover;
       this.refire = refire;
       this.autoprocessinglog = autoprocessinglog;
       this.processinghost = processinghost;
       this.executeaftertime = executeaftertime;
       this.lastruntime = lastruntime;
       this.recordcreationtime = recordcreationtime;
       this.triggerdefs = triggerdefs;
       this.selmsgtdefs = selmsgtdefs;
    }
   
     @Id 

    
    @Column(name="PK", unique=true, nullable=false, precision=12, scale=0)
    public long getPk() {
        return this.pk;
    }
    
    public void setPk(long pk) {
        this.pk = pk;
    }

    @Version
    @Column(name="VERSION", nullable=false, length=8)
    public String getVersion() {
        return this.version;
    }
    
    public void setVersion(String version) {
        this.version = version;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTRDEFPK", nullable=false)
    public Contrdef getContrdef() {
        return this.contrdef;
    }
    
    public void setContrdef(Contrdef contrdef) {
        this.contrdef = contrdef;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="SELSTCELEMPK")
    public Selstcelem getSelstcelem() {
        return this.selstcelem;
    }
    
    public void setSelstcelem(Selstcelem selstcelem) {
        this.selstcelem = selstcelem;
    }

    
    @Column(name="JOBNAME", nullable=false, length=50)
    public String getJobname() {
        return this.jobname;
    }
    
    public void setJobname(String jobname) {
        this.jobname = jobname;
    }

    
    @Column(name="BACKENDRESOURCE", nullable=false, length=10)
    public String getBackendresource() {
        return this.backendresource;
    }
    
    public void setBackendresource(String backendresource) {
        this.backendresource = backendresource;
    }

    
    @Column(name="JOBCLASS", nullable=false, length=200)
    public String getJobclass() {
        return this.jobclass;
    }
    
    public void setJobclass(String jobclass) {
        this.jobclass = jobclass;
    }

    
    @Column(name="COMMAND")
    public String getCommand() {
        return this.command;
    }
    
    public void setCommand(String command) {
        this.command = command;
    }

    
    @Column(name="EXECUTIONMODE", nullable=false, length=30)
    public String getExecutionmode() {
        return this.executionmode;
    }
    
    public void setExecutionmode(String executionmode) {
        this.executionmode = executionmode;
    }

    
    @Column(name="TASKMESSAGETYPE", nullable=false, length=50)
    public String getTaskmessagetype() {
        return this.taskmessagetype;
    }
    
    public void setTaskmessagetype(String taskmessagetype) {
        this.taskmessagetype = taskmessagetype;
    }

    
    @Column(name="TASKDEFINITIONVERSION", nullable=false, length=8)
    public String getTaskdefinitionversion() {
        return this.taskdefinitionversion;
    }
    
    public void setTaskdefinitionversion(String taskdefinitionversion) {
        this.taskdefinitionversion = taskdefinitionversion;
    }

    
    @Column(name="CONTENT", nullable=false, length=2500)
    public String getContent() {
        return this.content;
    }
    
    public void setContent(String content) {
        this.content = content;
    }

    
    @Column(name="TRIGGERREPEATCOUNT", nullable=false, precision=4, scale=0)
    public short getTriggerrepeatcount() {
        return this.triggerrepeatcount;
    }
    
    public void setTriggerrepeatcount(short triggerrepeatcount) {
        this.triggerrepeatcount = triggerrepeatcount;
    }

    
    @Column(name="TRIGGERREPEPEATINTERVAL", nullable=false, precision=10, scale=0)
    public long getTriggerrepepeatinterval() {
        return this.triggerrepepeatinterval;
    }
    
    public void setTriggerrepepeatinterval(long triggerrepepeatinterval) {
        this.triggerrepepeatinterval = triggerrepepeatinterval;
    }

    
    @Column(name="GROUPNAME", nullable=false, length=30)
    public String getGroupname() {
        return this.groupname;
    }
    
    public void setGroupname(String groupname) {
        this.groupname = groupname;
    }

    
    @Column(name="JOBDESCRIPTION")
    public String getJobdescription() {
        return this.jobdescription;
    }
    
    public void setJobdescription(String jobdescription) {
        this.jobdescription = jobdescription;
    }

    
    @Column(name="VOLATILITY", nullable=false, length=1)
    public char getVolatility() {
        return this.volatility;
    }
    
    public void setVolatility(char volatility) {
        this.volatility = volatility;
    }

    
    @Column(name="DURABILITY", nullable=false, length=1)
    public char getDurability() {
        return this.durability;
    }
    
    public void setDurability(char durability) {
        this.durability = durability;
    }

    
    @Column(name="RECOVER", nullable=false, length=1)
    public char getRecover() {
        return this.recover;
    }
    
    public void setRecover(char recover) {
        this.recover = recover;
    }

    
    @Column(name="REFIRE", nullable=false, length=1)
    public char getRefire() {
        return this.refire;
    }
    
    public void setRefire(char refire) {
        this.refire = refire;
    }

    
    @Column(name="AUTOPROCESSINGLOG", nullable=false, length=1)
    public char getAutoprocessinglog() {
        return this.autoprocessinglog;
    }
    
    public void setAutoprocessinglog(char autoprocessinglog) {
        this.autoprocessinglog = autoprocessinglog;
    }

    
    @Column(name="PROCESSINGHOST", nullable=false, length=50)
    public String getProcessinghost() {
        return this.processinghost;
    }
    
    public void setProcessinghost(String processinghost) {
        this.processinghost = processinghost;
    }

    
    @Column(name="EXECUTEAFTERTIME", length=1)
    public Character getExecuteaftertime() {
        return this.executeaftertime;
    }
    
    public void setExecuteaftertime(Character executeaftertime) {
        this.executeaftertime = executeaftertime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LASTRUNTIME", length=26)
    public Date getLastruntime() {
        return this.lastruntime;
    }
    
    public void setLastruntime(Date lastruntime) {
        this.lastruntime = lastruntime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="RECORDCREATIONTIME", nullable=false, length=26)
    public Date getRecordcreationtime() {
        return this.recordcreationtime;
    }
    
    public void setRecordcreationtime(Date recordcreationtime) {
        this.recordcreationtime = recordcreationtime;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="jobdef")
    public Set<Triggerdef> getTriggerdefs() {
        return this.triggerdefs;
    }
    
    public void setTriggerdefs(Set<Triggerdef> triggerdefs) {
        this.triggerdefs = triggerdefs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="jobdef")
    public Set<Selmsgtdef> getSelmsgtdefs() {
        return this.selmsgtdefs;
    }
    
    public void setSelmsgtdefs(Set<Selmsgtdef> selmsgtdefs) {
        this.selmsgtdefs = selmsgtdefs;
    }




}


