package com.galexis.allog2mysql.deleteme;
// Generated Sep 6, 2013 9:37:59 AM by Hibernate Tools 3.6.0


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

/**
 * AsxExchg generated by hbm2java
 */
@Entity
@Table(name="ASX_EXCHG"
    ,schema="INTEGAP"
    ,catalog="CHGALE11RDB"
    , uniqueConstraints = @UniqueConstraint(columnNames="MESSAGEID") 
)
public class AsxExchg  implements java.io.Serializable {


     private long pk;
     private Long version;
     private Contrdef contrdef;
     private String messageid;
     private char direction;
     private String mic;
     private String messagelocation;
     private String recordprocessedflag;
     private Date recordprocessingtime;
     private Date recordlastchangetime;
     private Date recordcreationtime;

    public AsxExchg() {
    }

	
    public AsxExchg(long pk, Contrdef contrdef, String messageid, char direction, String recordprocessedflag, Date recordcreationtime) {
        this.pk = pk;
        this.contrdef = contrdef;
        this.messageid = messageid;
        this.direction = direction;
        this.recordprocessedflag = recordprocessedflag;
        this.recordcreationtime = recordcreationtime;
    }
    public AsxExchg(long pk, Contrdef contrdef, String messageid, char direction, String mic, String messagelocation, String recordprocessedflag, Date recordprocessingtime, Date recordlastchangetime, Date recordcreationtime) {
       this.pk = pk;
       this.contrdef = contrdef;
       this.messageid = messageid;
       this.direction = direction;
       this.mic = mic;
       this.messagelocation = messagelocation;
       this.recordprocessedflag = recordprocessedflag;
       this.recordprocessingtime = recordprocessingtime;
       this.recordlastchangetime = recordlastchangetime;
       this.recordcreationtime = recordcreationtime;
    }
   
     @Id 

    
    @Column(name="PK", unique=true, nullable=false, precision=12, scale=0)
    public long getPk() {
        return this.pk;
    }
    
    public void setPk(long pk) {
        this.pk = pk;
    }

    @Version
    @Column(name="VERSION", precision=12, scale=0)
    public Long getVersion() {
        return this.version;
    }
    
    public void setVersion(Long version) {
        this.version = version;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTRDEFPK", nullable=false)
    public Contrdef getContrdef() {
        return this.contrdef;
    }
    
    public void setContrdef(Contrdef contrdef) {
        this.contrdef = contrdef;
    }

    
    @Column(name="MESSAGEID", unique=true, nullable=false, length=256)
    public String getMessageid() {
        return this.messageid;
    }
    
    public void setMessageid(String messageid) {
        this.messageid = messageid;
    }

    
    @Column(name="DIRECTION", nullable=false, length=1)
    public char getDirection() {
        return this.direction;
    }
    
    public void setDirection(char direction) {
        this.direction = direction;
    }

    
    @Column(name="MIC", length=48)
    public String getMic() {
        return this.mic;
    }
    
    public void setMic(String mic) {
        this.mic = mic;
    }

    
    @Column(name="MESSAGELOCATION", length=1024)
    public String getMessagelocation() {
        return this.messagelocation;
    }
    
    public void setMessagelocation(String messagelocation) {
        this.messagelocation = messagelocation;
    }

    
    @Column(name="RECORDPROCESSEDFLAG", nullable=false, length=1)
    public String getRecordprocessedflag() {
        return this.recordprocessedflag;
    }
    
    public void setRecordprocessedflag(String recordprocessedflag) {
        this.recordprocessedflag = recordprocessedflag;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="RECORDPROCESSINGTIME", length=26)
    public Date getRecordprocessingtime() {
        return this.recordprocessingtime;
    }
    
    public void setRecordprocessingtime(Date recordprocessingtime) {
        this.recordprocessingtime = recordprocessingtime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="RECORDLASTCHANGETIME", length=26)
    public Date getRecordlastchangetime() {
        return this.recordlastchangetime;
    }
    
    public void setRecordlastchangetime(Date recordlastchangetime) {
        this.recordlastchangetime = recordlastchangetime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="RECORDCREATIONTIME", nullable=false, length=26)
    public Date getRecordcreationtime() {
        return this.recordcreationtime;
    }
    
    public void setRecordcreationtime(Date recordcreationtime) {
        this.recordcreationtime = recordcreationtime;
    }




}


