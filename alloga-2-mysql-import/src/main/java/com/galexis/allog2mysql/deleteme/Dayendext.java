package com.galexis.allog2mysql.deleteme;
// Generated Sep 6, 2013 9:37:59 AM by Hibernate Tools 3.6.0


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Dayendext generated by hbm2java
 */
@Entity
@Table(name="DAYENDEXT"
    ,schema="INTEGAP"
    ,catalog="CHGALE11RDB"
    , uniqueConstraints = {@UniqueConstraint(columnNames="PK"), @UniqueConstraint(columnNames={"DAYENDRELEASEDATE", "CONTRDEFPK", "PHASE"})} 
)
public class Dayendext  implements java.io.Serializable {


     private DayendextId id;
     private Contrdef contrdef;

    public Dayendext() {
    }

	
    public Dayendext(DayendextId id) {
        this.id = id;
    }
    public Dayendext(DayendextId id, Contrdef contrdef) {
       this.id = id;
       this.contrdef = contrdef;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="pk", column=@Column(name="PK", unique=true, nullable=false, precision=12, scale=0) ), 
        @AttributeOverride(name="dayendreleasedate", column=@Column(name="DAYENDRELEASEDATE", nullable=false, precision=8, scale=0) ), 
        @AttributeOverride(name="contrdefpk", column=@Column(name="CONTRDEFPK", precision=12, scale=0) ), 
        @AttributeOverride(name="phase", column=@Column(name="PHASE", nullable=false, length=10) ), 
        @AttributeOverride(name="validfrom", column=@Column(name="VALIDFROM", length=26) ), 
        @AttributeOverride(name="validto", column=@Column(name="VALIDTO", length=26) ), 
        @AttributeOverride(name="considered", column=@Column(name="CONSIDERED", length=26) ), 
        @AttributeOverride(name="recordcreationtime", column=@Column(name="RECORDCREATIONTIME", nullable=false, length=26) ) } )
    public DayendextId getId() {
        return this.id;
    }
    
    public void setId(DayendextId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CONTRDEFPK", insertable=false, updatable=false)
    public Contrdef getContrdef() {
        return this.contrdef;
    }
    
    public void setContrdef(Contrdef contrdef) {
        this.contrdef = contrdef;
    }




}


