package com.galexis.allog2mysql.deleteme;
// Generated Sep 6, 2013 9:37:59 AM by Hibernate Tools 3.6.0


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Custordtxt generated by hbm2java
 */
@Entity
@Table(name="CUSTORDTXT"
    ,schema="INTEGAP"
    ,catalog="CHGALE11RDB"
    , uniqueConstraints = @UniqueConstraint(columnNames="PK") 
)
public class Custordtxt  implements java.io.Serializable {


     private CustordtxtId id;
     private Custordhdr custordhdr;
     private Custordlin custordlin;

    public Custordtxt() {
    }

	
    public Custordtxt(CustordtxtId id) {
        this.id = id;
    }
    public Custordtxt(CustordtxtId id, Custordhdr custordhdr, Custordlin custordlin) {
       this.id = id;
       this.custordhdr = custordhdr;
       this.custordlin = custordlin;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="pk", column=@Column(name="PK", unique=true, nullable=false, precision=12, scale=0) ), 
        @AttributeOverride(name="custordhdrpk", column=@Column(name="CUSTORDHDRPK", precision=12, scale=0) ), 
        @AttributeOverride(name="custordlinpk", column=@Column(name="CUSTORDLINPK", precision=12, scale=0) ), 
        @AttributeOverride(name="textsequencenr", column=@Column(name="TEXTSEQUENCENR", nullable=false, precision=6, scale=0) ), 
        @AttributeOverride(name="textid", column=@Column(name="TEXTID", length=10) ), 
        @AttributeOverride(name="text", column=@Column(name="TEXT", length=100) ), 
        @AttributeOverride(name="transactionid", column=@Column(name="TRANSACTIONID", length=50) ), 
        @AttributeOverride(name="timestampreceived", column=@Column(name="TIMESTAMPRECEIVED", length=26) ), 
        @AttributeOverride(name="programname", column=@Column(name="PROGRAMNAME", length=10) ), 
        @AttributeOverride(name="processingflag1", column=@Column(name="PROCESSINGFLAG1", length=1) ), 
        @AttributeOverride(name="processingflag2", column=@Column(name="PROCESSINGFLAG2", length=1) ), 
        @AttributeOverride(name="processingflag3", column=@Column(name="PROCESSINGFLAG3", length=1) ), 
        @AttributeOverride(name="processingflag4", column=@Column(name="PROCESSINGFLAG4", length=1) ), 
        @AttributeOverride(name="processingflag5", column=@Column(name="PROCESSINGFLAG5", length=1) ), 
        @AttributeOverride(name="processingflag6", column=@Column(name="PROCESSINGFLAG6", length=1) ), 
        @AttributeOverride(name="processingflag7", column=@Column(name="PROCESSINGFLAG7", length=1) ), 
        @AttributeOverride(name="processingflag8", column=@Column(name="PROCESSINGFLAG8", length=1) ), 
        @AttributeOverride(name="processingflag9", column=@Column(name="PROCESSINGFLAG9", length=1) ), 
        @AttributeOverride(name="processingflag10", column=@Column(name="PROCESSINGFLAG10", length=1) ), 
        @AttributeOverride(name="recordprocessedflag", column=@Column(name="RECORDPROCESSEDFLAG", length=1) ), 
        @AttributeOverride(name="recordprocessingtime", column=@Column(name="RECORDPROCESSINGTIME", length=26) ), 
        @AttributeOverride(name="recordlastchangetime", column=@Column(name="RECORDLASTCHANGETIME", length=26) ), 
        @AttributeOverride(name="recordcreationtime", column=@Column(name="RECORDCREATIONTIME", nullable=false, length=26) ) } )
    public CustordtxtId getId() {
        return this.id;
    }
    
    public void setId(CustordtxtId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CUSTORDHDRPK", insertable=false, updatable=false)
    public Custordhdr getCustordhdr() {
        return this.custordhdr;
    }
    
    public void setCustordhdr(Custordhdr custordhdr) {
        this.custordhdr = custordhdr;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CUSTORDLINPK", insertable=false, updatable=false)
    public Custordlin getCustordlin() {
        return this.custordlin;
    }
    
    public void setCustordlin(Custordlin custordlin) {
        this.custordlin = custordlin;
    }




}


