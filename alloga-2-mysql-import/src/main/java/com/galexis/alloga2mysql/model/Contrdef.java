package com.galexis.alloga2mysql.model;

// Generated Mar 4, 2013 4:41:13 PM by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Contrdef generated by hbm2java
 */
@Entity
@Table(name = "CONTRDEF", uniqueConstraints = { @UniqueConstraint(columnNames = "CONTRACTORINTEGRATIONPLATFORM"),
        @UniqueConstraint(columnNames = "CONTRACTOR") })
public class Contrdef implements java.io.Serializable {

	private long pk;

	private String contractor;

	private String contractorintegrationplatform;

	private String description;

	private String supplier;

	private Long bizpmasterpk;

	private String holdordertextkeyflag;

	private String holdorderbatchallocationflag;

	private String reportorderzerolineflag;

	private String confirmentiredeliveryflag;

	private String expectedreceiptsusingflag;

	private String confirmentirepurchaseordflag;

	private String salesorganisationsplitflag;

	private String isactiveflag;

	private Character isinternalpartner;

	private Character i2EShopActiv;

	private String dayendHandlingType;

	private Character isFullService;

	private Character useDeliveryAddr;

	private Character useInvoiceAddr;

	private Character holdInvoice;

	private Character useCustomerNbr;

	private Character useLineNbr;

	private Character useOrdernbrForOrdertype;

	private Character useDeliverySchedule;

	private Character sndDeliveryWithoutPicklist;

	private Character outboundOnlyWhenInbound;

	private Character extendelocationzoneevaluation;

	private Character ordertypeAccordingLinecat;

	private String language;

	private String customernr;

	private String reportingEmailAddress;

	private Date recordcreationtime;

	private Date recordlastchangetime;

	private String userlastchange;

	public Contrdef() {
	}

	public Contrdef(long pk, String contractor, String holdordertextkeyflag, String holdorderbatchallocationflag, String reportorderzerolineflag, String confirmentiredeliveryflag,
	        String expectedreceiptsusingflag, String confirmentirepurchaseordflag, String salesorganisationsplitflag, String isactiveflag, Date recordcreationtime) {
		this.pk = pk;
		this.contractor = contractor;
		this.holdordertextkeyflag = holdordertextkeyflag;
		this.holdorderbatchallocationflag = holdorderbatchallocationflag;
		this.reportorderzerolineflag = reportorderzerolineflag;
		this.confirmentiredeliveryflag = confirmentiredeliveryflag;
		this.expectedreceiptsusingflag = expectedreceiptsusingflag;
		this.confirmentirepurchaseordflag = confirmentirepurchaseordflag;
		this.salesorganisationsplitflag = salesorganisationsplitflag;
		this.isactiveflag = isactiveflag;
		this.recordcreationtime = recordcreationtime;
	}

	public Contrdef(long pk, String contractor, String contractorintegrationplatform, String description, String supplier, Long bizpmasterpk, String holdordertextkeyflag,
	        String holdorderbatchallocationflag, String reportorderzerolineflag, String confirmentiredeliveryflag, String expectedreceiptsusingflag,
	        String confirmentirepurchaseordflag, String salesorganisationsplitflag, String isactiveflag, Character isinternalpartner, Character i2EShopActiv,
	        String dayendHandlingType, Character isFullService, Character useDeliveryAddr, Character useInvoiceAddr, Character holdInvoice, Character useCustomerNbr,
	        Character useLineNbr, Character useOrdernbrForOrdertype, Character useDeliverySchedule, Character sndDeliveryWithoutPicklist, Character outboundOnlyWhenInbound,
	        Character extendelocationzoneevaluation, Character ordertypeAccordingLinecat, String language, String customernr, String reportingEmailAddress,
	        Date recordcreationtime, Date recordlastchangetime, String userlastchange) {
		this.pk = pk;
		this.contractor = contractor;
		this.contractorintegrationplatform = contractorintegrationplatform;
		this.description = description;
		this.supplier = supplier;
		this.bizpmasterpk = bizpmasterpk;
		this.holdordertextkeyflag = holdordertextkeyflag;
		this.holdorderbatchallocationflag = holdorderbatchallocationflag;
		this.reportorderzerolineflag = reportorderzerolineflag;
		this.confirmentiredeliveryflag = confirmentiredeliveryflag;
		this.expectedreceiptsusingflag = expectedreceiptsusingflag;
		this.confirmentirepurchaseordflag = confirmentirepurchaseordflag;
		this.salesorganisationsplitflag = salesorganisationsplitflag;
		this.isactiveflag = isactiveflag;
		this.isinternalpartner = isinternalpartner;
		this.i2EShopActiv = i2EShopActiv;
		this.dayendHandlingType = dayendHandlingType;
		this.isFullService = isFullService;
		this.useDeliveryAddr = useDeliveryAddr;
		this.useInvoiceAddr = useInvoiceAddr;
		this.holdInvoice = holdInvoice;
		this.useCustomerNbr = useCustomerNbr;
		this.useLineNbr = useLineNbr;
		this.useOrdernbrForOrdertype = useOrdernbrForOrdertype;
		this.useDeliverySchedule = useDeliverySchedule;
		this.sndDeliveryWithoutPicklist = sndDeliveryWithoutPicklist;
		this.outboundOnlyWhenInbound = outboundOnlyWhenInbound;
		this.extendelocationzoneevaluation = extendelocationzoneevaluation;
		this.ordertypeAccordingLinecat = ordertypeAccordingLinecat;
		this.language = language;
		this.customernr = customernr;
		this.reportingEmailAddress = reportingEmailAddress;
		this.recordcreationtime = recordcreationtime;
		this.recordlastchangetime = recordlastchangetime;
		this.userlastchange = userlastchange;
	}

	@Id
	@Column(name = "PK", unique = true, nullable = false, precision = 12, scale = 0)
	public long getPk() {
		return this.pk;
	}

	public void setPk(long pk) {
		this.pk = pk;
	}

	@Column(name = "CONTRACTOR", unique = true, nullable = false, length = 10)
	public String getContractor() {
		return this.contractor;
	}

	public void setContractor(String contractor) {
		this.contractor = contractor;
	}

	@Column(name = "CONTRACTORINTEGRATIONPLATFORM", unique = true, length = 50)
	public String getContractorintegrationplatform() {
		return this.contractorintegrationplatform;
	}

	public void setContractorintegrationplatform(String contractorintegrationplatform) {
		this.contractorintegrationplatform = contractorintegrationplatform;
	}

	@Column(name = "DESCRIPTION", length = 100)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "SUPPLIER", length = 20)
	public String getSupplier() {
		return this.supplier;
	}

	public void setSupplier(String supplier) {
		this.supplier = supplier;
	}

	@Column(name = "BIZPMASTERPK", precision = 12, scale = 0)
	public Long getBizpmasterpk() {
		return this.bizpmasterpk;
	}

	public void setBizpmasterpk(Long bizpmasterpk) {
		this.bizpmasterpk = bizpmasterpk;
	}

	@Column(name = "HOLDORDERTEXTKEYFLAG", nullable = false, length = 1)
	public String getHoldordertextkeyflag() {
		return this.holdordertextkeyflag;
	}

	public void setHoldordertextkeyflag(String holdordertextkeyflag) {
		this.holdordertextkeyflag = holdordertextkeyflag;
	}

	@Column(name = "HOLDORDERBATCHALLOCATIONFLAG", nullable = false, length = 1)
	public String getHoldorderbatchallocationflag() {
		return this.holdorderbatchallocationflag;
	}

	public void setHoldorderbatchallocationflag(String holdorderbatchallocationflag) {
		this.holdorderbatchallocationflag = holdorderbatchallocationflag;
	}

	@Column(name = "REPORTORDERZEROLINEFLAG", nullable = false, length = 1)
	public String getReportorderzerolineflag() {
		return this.reportorderzerolineflag;
	}

	public void setReportorderzerolineflag(String reportorderzerolineflag) {
		this.reportorderzerolineflag = reportorderzerolineflag;
	}

	@Column(name = "CONFIRMENTIREDELIVERYFLAG", nullable = false, length = 1)
	public String getConfirmentiredeliveryflag() {
		return this.confirmentiredeliveryflag;
	}

	public void setConfirmentiredeliveryflag(String confirmentiredeliveryflag) {
		this.confirmentiredeliveryflag = confirmentiredeliveryflag;
	}

	@Column(name = "EXPECTEDRECEIPTSUSINGFLAG", nullable = false, length = 1)
	public String getExpectedreceiptsusingflag() {
		return this.expectedreceiptsusingflag;
	}

	public void setExpectedreceiptsusingflag(String expectedreceiptsusingflag) {
		this.expectedreceiptsusingflag = expectedreceiptsusingflag;
	}

	@Column(name = "CONFIRMENTIREPURCHASEORDFLAG", nullable = false, length = 1)
	public String getConfirmentirepurchaseordflag() {
		return this.confirmentirepurchaseordflag;
	}

	public void setConfirmentirepurchaseordflag(String confirmentirepurchaseordflag) {
		this.confirmentirepurchaseordflag = confirmentirepurchaseordflag;
	}

	@Column(name = "SALESORGANISATIONSPLITFLAG", nullable = false, length = 1)
	public String getSalesorganisationsplitflag() {
		return this.salesorganisationsplitflag;
	}

	public void setSalesorganisationsplitflag(String salesorganisationsplitflag) {
		this.salesorganisationsplitflag = salesorganisationsplitflag;
	}

	@Column(name = "ISACTIVEFLAG", nullable = false, length = 1)
	public String getIsactiveflag() {
		return this.isactiveflag;
	}

	public void setIsactiveflag(String isactiveflag) {
		this.isactiveflag = isactiveflag;
	}

	@Column(name = "ISINTERNALPARTNER", length = 1)
	public Character getIsinternalpartner() {
		return this.isinternalpartner;
	}

	public void setIsinternalpartner(Character isinternalpartner) {
		this.isinternalpartner = isinternalpartner;
	}

	@Column(name = "I2_E_SHOP_ACTIV", length = 1)
	public Character getI2EShopActiv() {
		return this.i2EShopActiv;
	}

	public void setI2EShopActiv(Character i2EShopActiv) {
		this.i2EShopActiv = i2EShopActiv;
	}

	@Column(name = "DAYEND_HANDLING_TYPE", length = 20)
	public String getDayendHandlingType() {
		return this.dayendHandlingType;
	}

	public void setDayendHandlingType(String dayendHandlingType) {
		this.dayendHandlingType = dayendHandlingType;
	}

	@Column(name = "IS_FULL_SERVICE", length = 1)
	public Character getIsFullService() {
		return this.isFullService;
	}

	public void setIsFullService(Character isFullService) {
		this.isFullService = isFullService;
	}

	@Column(name = "USE_DELIVERY_ADDR", length = 1)
	public Character getUseDeliveryAddr() {
		return this.useDeliveryAddr;
	}

	public void setUseDeliveryAddr(Character useDeliveryAddr) {
		this.useDeliveryAddr = useDeliveryAddr;
	}

	@Column(name = "USE_INVOICE_ADDR", length = 1)
	public Character getUseInvoiceAddr() {
		return this.useInvoiceAddr;
	}

	public void setUseInvoiceAddr(Character useInvoiceAddr) {
		this.useInvoiceAddr = useInvoiceAddr;
	}

	@Column(name = "HOLD_INVOICE", length = 1)
	public Character getHoldInvoice() {
		return this.holdInvoice;
	}

	public void setHoldInvoice(Character holdInvoice) {
		this.holdInvoice = holdInvoice;
	}

	@Column(name = "USE_CUSTOMER_NBR", length = 1)
	public Character getUseCustomerNbr() {
		return this.useCustomerNbr;
	}

	public void setUseCustomerNbr(Character useCustomerNbr) {
		this.useCustomerNbr = useCustomerNbr;
	}

	@Column(name = "USE_LINE_NBR", length = 1)
	public Character getUseLineNbr() {
		return this.useLineNbr;
	}

	public void setUseLineNbr(Character useLineNbr) {
		this.useLineNbr = useLineNbr;
	}

	@Column(name = "USE_ORDERNBR_FOR_ORDERTYPE", length = 1)
	public Character getUseOrdernbrForOrdertype() {
		return this.useOrdernbrForOrdertype;
	}

	public void setUseOrdernbrForOrdertype(Character useOrdernbrForOrdertype) {
		this.useOrdernbrForOrdertype = useOrdernbrForOrdertype;
	}

	@Column(name = "USE_DELIVERY_SCHEDULE", length = 1)
	public Character getUseDeliverySchedule() {
		return this.useDeliverySchedule;
	}

	public void setUseDeliverySchedule(Character useDeliverySchedule) {
		this.useDeliverySchedule = useDeliverySchedule;
	}

	@Column(name = "SND_DELIVERY_WITHOUT_PICKLIST", length = 1)
	public Character getSndDeliveryWithoutPicklist() {
		return this.sndDeliveryWithoutPicklist;
	}

	public void setSndDeliveryWithoutPicklist(Character sndDeliveryWithoutPicklist) {
		this.sndDeliveryWithoutPicklist = sndDeliveryWithoutPicklist;
	}

	@Column(name = "OUTBOUND_ONLY_WHEN_INBOUND", length = 1)
	public Character getOutboundOnlyWhenInbound() {
		return this.outboundOnlyWhenInbound;
	}

	public void setOutboundOnlyWhenInbound(Character outboundOnlyWhenInbound) {
		this.outboundOnlyWhenInbound = outboundOnlyWhenInbound;
	}

	@Column(name = "EXTENDELOCATIONZONEEVALUATION", length = 1)
	public Character getExtendelocationzoneevaluation() {
		return this.extendelocationzoneevaluation;
	}

	public void setExtendelocationzoneevaluation(Character extendelocationzoneevaluation) {
		this.extendelocationzoneevaluation = extendelocationzoneevaluation;
	}

	@Column(name = "ORDERTYPE_ACCORDING_LINECAT", length = 1)
	public Character getOrdertypeAccordingLinecat() {
		return this.ordertypeAccordingLinecat;
	}

	public void setOrdertypeAccordingLinecat(Character ordertypeAccordingLinecat) {
		this.ordertypeAccordingLinecat = ordertypeAccordingLinecat;
	}

	@Column(name = "LANGUAGE", length = 3)
	public String getLanguage() {
		return this.language;
	}

	public void setLanguage(String language) {
		this.language = language;
	}

	@Column(name = "CUSTOMERNR", length = 20)
	public String getCustomernr() {
		return this.customernr;
	}

	public void setCustomernr(String customernr) {
		this.customernr = customernr;
	}

	@Column(name = "REPORTING_EMAIL_ADDRESS", length = 250)
	public String getReportingEmailAddress() {
		return this.reportingEmailAddress;
	}

	public void setReportingEmailAddress(String reportingEmailAddress) {
		this.reportingEmailAddress = reportingEmailAddress;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "RECORDCREATIONTIME", nullable = false, length = 19)
	public Date getRecordcreationtime() {
		return this.recordcreationtime;
	}

	public void setRecordcreationtime(Date recordcreationtime) {
		this.recordcreationtime = recordcreationtime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "RECORDLASTCHANGETIME", length = 19)
	public Date getRecordlastchangetime() {
		return this.recordlastchangetime;
	}

	public void setRecordlastchangetime(Date recordlastchangetime) {
		this.recordlastchangetime = recordlastchangetime;
	}

	@Column(name = "USERLASTCHANGE", length = 20)
	public String getUserlastchange() {
		return this.userlastchange;
	}

	public void setUserlastchange(String userlastchange) {
		this.userlastchange = userlastchange;
	}

}
